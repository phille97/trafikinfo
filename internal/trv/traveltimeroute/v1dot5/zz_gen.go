// Package v1dot5 contains the type definitions for TravelTimeRoute v1.5.
package v1dot5

import (
	"time"
)

// THIS FILE IS AUTOMATICALLY GENERATED FROM THE XSD. DO NOT EDIT.

type TravelTimeRoute struct {
	// SV: Anger id för sträckan
	Id *string `xml:"Id,omitempty"`
	// SV: Genomsnittlig funktionell vägklass för sträckan.En klassificering 0-9 baserad på hur viktig en väg är för det totala vägnätets förbindelsemöjligheter.0 - De viktigaste vägarna9 - De minst viktiga vägarna
	AverageFunctionalRoadClass *int `xml:"AverageFunctionalRoadClass,omitempty"`
	// SV: Landskod
	CountryCode *string `xml:"CountryCode,omitempty"`
	// SV: <div class="toggleTitle" xmlns="http://trafikverket.se/TravelTimeRoute.xsd">Länsnummer</div> <div class="toggle arrowR" xmlns="http://trafikverket.se/TravelTimeRoute.xsd" /> <div class="toggleContent" xmlns="http://trafikverket.se/TravelTimeRoute.xsd"> <table class="table table-condensed"> <tr> <td>1</td> <td>Stockholms län</td> </tr> <tr> <td>3</td> <td>Uppsala län</td> </tr> <tr> <td>4</td> <td>Södermanlands län</td> </tr> <tr> <td>5</td> <td>Östergötlands län</td> </tr> <tr> <td>6</td> <td>Jönköpings län</td> </tr> <tr> <td>7</td> <td>Kronobergs län</td> </tr> <tr> <td>8</td> <td>Kalmar län</td> </tr> <tr> <td>9</td> <td>Gotlands län</td> </tr> <tr> <td>10</td> <td>Blekinge län</td> </tr> <tr> <td>12</td> <td>Skåne län</td> </tr> <tr> <td>13</td> <td>Hallands län</td> </tr> <tr> <td>14</td> <td>Västra Götalands län</td> </tr> <tr> <td>17</td> <td>Värmlands län</td> </tr> <tr> <td>18</td> <td>Örebro län</td> </tr> <tr> <td>19</td> <td>Västmanlands län</td> </tr> <tr> <td>20</td> <td>Dalarnas län</td> </tr> <tr> <td>21</td> <td>Gävleborgs län</td> </tr> <tr> <td>22</td> <td>Västernorrlands län</td> </tr> <tr> <td>23</td> <td>Jämtlands län</td> </tr> <tr> <td>24</td> <td>Västerbottens län</td> </tr> <tr> <td>25</td> <td>Norrbottens län</td> </tr> </table> </div>
	CountyNo []int `xml:"CountyNo,omitempty"`
	// SV: Anger normal restid i sekunder för sträckan vid skyltad hastighet baserat på historiskt data
	ExpectedFreeFlowTravelTime *float64 `xml:"ExpectedFreeFlowTravelTime,omitempty"`
	// SV: Anger normal restid i sekunder för sträckan vid skyltad hastighet
	FreeFlowTravelTime *float64 `xml:"FreeFlowTravelTime,omitempty"`
	// SV: Anger längden i meter för sträckan
	Length *float64 `xml:"Length,omitempty"`
	// SV: Tidpunkt då detta specifika värde eller uppsättning värden har uppmätts. Det är slutet på perioden som skickas från källsystemet
	MeasureTime *time.Time `xml:"MeasureTime,omitempty"`
	// SV: Anger namnet på sträckan
	Name *string `xml:"Name,omitempty"`
	// SV: <div class="toggleTitle" xmlns="http://trafikverket.se/TravelTimeRoute.xsd">Ruttägare</div> <div class="toggle arrowR" xmlns="http://trafikverket.se/TravelTimeRoute.xsd" /> <div class="toggleContent" xmlns="http://trafikverket.se/TravelTimeRoute.xsd"> <table class="table table-condensed"> <tr> <td>1</td> <td>Trafiken.nu</td> </tr> <tr> <td>2</td> <td>Ums</td> </tr> <tr> <td>3</td> <td>Pendlingsstråk</td> </tr> <tr> <td>4</td> <td>Trafikverket</td> </tr> </table> </div>
	RouteOwner *int `xml:"RouteOwner,omitempty"`
	// SV: Anger hastighet i km/h
	Speed *float64 `xml:"Speed,omitempty"`
	// SV: <div class="toggleTitle" xmlns="http://trafikverket.se/TrafficStatus1.4.xsd">Anger restidsstatus för sträckan freeflow - fri framkomlighet heavy - svår framkomlighet congested - mycket svår framkomlighet impossible - framkomlighet omöjlig unknown - framkomlighet okänd</div> <div class="toggle arrowR" xmlns="http://trafikverket.se/TrafficStatus1.4.xsd"> </div> <div class="toggleContent" xmlns="http://trafikverket.se/TrafficStatus1.4.xsd"> freeflow - fri framkomlighet<br /> heavy - svår framkomlighet<br /> congested - mycket svår framkomlighet<br /> impossible - framkomlighet omöjlig<br /> unknown - framkomlighet okänd </div>
	TrafficStatus *string `xml:"TrafficStatus,omitempty"`
	// SV: Anger aktuell restid i sekunder för sträckan
	TravelTime *float64  `xml:"TravelTime,omitempty"`
	Geometry   *Geometry `xml:"Geometry,omitempty"`
	// EN: Specifies when the object is stored.
	// SV: Anger när objektet är sparat.
	ModifiedTime *time.Time `xml:"ModifiedTime,omitempty"`
	// EN: Specifies if the object is deleted.
	// SV: Anger om objektet är raderat.
	Deleted           *bool      `xml:"Deleted,omitempty"`
	Checkoutid        *string    `xml:"checkoutid,attr,omitempty"`
	Checkouts         *int64     `xml:"checkouts,attr,omitempty"`
	Leaseduntil       *time.Time `xml:"leaseduntil,attr,omitempty"`
	Acknowledged      *time.Time `xml:"acknowledged,attr,omitempty"`
	Statuscode        *uint8     `xml:"statuscode,attr,omitempty"`
	Itemsacknowledged *int64     `xml:"itemsacknowledged,attr,omitempty"`
	Itemsleft         *int64     `xml:"itemsleft,attr,omitempty"`
}

type Geometry struct {
	// SV: Beskriver ruttens utbredning som en LINESTRING i koordinatsystem SWEREF99TM
	SWEREF99TM *string `xml:"SWEREF99TM,omitempty"`
	// SV: Beskriver ruttens utbredning som en LINESTRING i koordinatsystem WGS84
	WGS84 *string `xml:"WGS84,omitempty"`
	// SV: Tidpunkt då elementet ändrades
	ModifiedTime *time.Time `xml:"ModifiedTime,omitempty"`
}
