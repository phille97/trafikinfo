// Package v1dot2 contains the type definitions for FerryAnnouncement v1.2.
package v1dot2

import (
	"time"
)

// THIS FILE IS AUTOMATICALLY GENERATED FROM THE XSD. DO NOT EDIT.

type FerryAnnouncement struct {
	// EN: Specifies if the object is deleted.
	// SV: Anger om objektet är raderat.
	Deleted *bool `xml:"Deleted,omitempty"`
	// SV: Avgångstid
	// EN: Departure time
	DepartureTime *time.Time `xml:"DepartureTime,omitempty"`
	// SV: Referens till Deviation.Id i objektet Situation
	// EN: Reference to Deviation.Id in the Situation object
	DeviationId *string `xml:"DeviationId,omitempty"`
	// SV: Avgångens id
	// EN: Departure id
	Id *int64 `xml:"Id,omitempty"`
	// SV: Information om avgången
	// EN: Information about the departure
	Info []string `xml:"Info,omitempty"`
	// SV: Avgår från
	// EN: Departing from
	FromHarbor *FromHarbor `xml:"FromHarbor,omitempty"`
	// SV: Ankommer till
	// EN: Arriving at
	ToHarbor *ToHarbor `xml:"ToHarbor,omitempty"`
	// SV: Information om rutten
	// EN: Route information
	Route *Route `xml:"Route,omitempty"`
	// EN: Specifies when the object is stored.
	// SV: Anger när objektet är sparat.
	ModifiedTime      *time.Time `xml:"ModifiedTime,omitempty"`
	Checkoutid        *string    `xml:"checkoutid,attr,omitempty"`
	Checkouts         *int64     `xml:"checkouts,attr,omitempty"`
	Leaseduntil       *time.Time `xml:"leaseduntil,attr,omitempty"`
	Acknowledged      *time.Time `xml:"acknowledged,attr,omitempty"`
	Statuscode        *uint8     `xml:"statuscode,attr,omitempty"`
	Itemsacknowledged *int64     `xml:"itemsacknowledged,attr,omitempty"`
	Itemsleft         *int64     `xml:"itemsleft,attr,omitempty"`
}

type FromHarbor struct {
	// SV: Avgår från (id)
	// EN: Departing from (id)
	Id *int `xml:"Id,omitempty"`
	// SV: Avgår från (namn)
	// EN: Departing from (name)
	Name *string `xml:"Name,omitempty"`
}

type ToHarbor struct {
	// SV: Ankommer till (id)
	// EN: Arriving at (id)
	Id *int `xml:"Id,omitempty"`
	// SV: Ankommer till (namn)
	// EN: Arriving at (name)
	Name *string `xml:"Name,omitempty"`
}

type Route struct {
	// SV: Beskrivande text om rutten
	// EN: Descriptive text about the route
	Description *string `xml:"Description,omitempty"`
	// SV: Ruttens id
	// EN: Route id
	Id *int `xml:"Id,omitempty"`
	// SV: Ruttens namn
	// EN: Route name
	Name *string `xml:"Name,omitempty"`
	// SV: Ruttens kortnamn
	// EN: Short name of the route
	Shortname *string `xml:"Shortname,omitempty"`
	// SV: Ledtyp
	// EN: led type
	Type *Type `xml:"Type,omitempty"`
}

type Type struct {
	// SV: Id för ledtypen
	// EN: id for led type
	Id *int `xml:"Id,omitempty"`
	// SV: Namn för ledtypen (ex. Vändande)
	// EN: Name for the led type (ex. Flipping)
	Name *string `xml:"Name,omitempty"`
}
